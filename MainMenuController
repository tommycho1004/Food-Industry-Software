import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.MenuItem;
import javafx.scene.control.TextField;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

public class MainMenuController implements Initializable {

    Stage stage;

    public MainMenuController() throws IOException {
        FXMLLoader pizzaCustom = new FXMLLoader(getClass().getResource("StoreOrdersView.fxml"));
        Parent root = (Parent) pizzaCustom.load();
        PizzaCustomizationController pizzaCustomizationController = pizzaCustom.getController();
        pizzaCustomizationController.setMainMenuController(this);
    }

    @FXML
    private Button checkCurrentOrder;

    @FXML
    private Button createNewOrderButton;

    @FXML
    private MenuItem deluxeButton;

    @FXML
    private Button enterNumberButton;

    @FXML
    private VBox enterNumberText;

    @FXML
    private MenuItem hawaiianButton;

    @FXML
    private AnchorPane mainChangeSize;

    @FXML
    private Button manageStoreOrders;

    @FXML
    private TextField numberEnter;

    @FXML
    private MenuItem pepperoniButton;

    @FXML
    private VBox workingText;

    String pizzaType;

    boolean numberChecker() {
        String phone = numberEnter.getText();
        if (!phone.isEmpty()) {
            try {
                int phoneNum = Integer.parseInt(numberEnter.getText());
            } catch (NumberFormatException e) {
                numberEnter.setPromptText("Not a valid number");
                numberEnter.clear();
                return false;
            }
            if (phone.length() == 10) {
                return true;
            } else {
                numberEnter.setPromptText("Not a valid number");
                numberEnter.clear();
                return false;
            }
        } else {
            numberEnter.setPromptText("Not a valid number");
            numberEnter.clear();
            return false;
        }
    }

    @FXML
    void checkCurrentOrderClick(ActionEvent event) throws IOException {
        Parent root = FXMLLoader.load(getClass().getResource("CurrentOrderView.fxml"));
        stage.setTitle("Current Order");
        stage.setScene(new Scene(root, 500, 500));
        stage.show();
    }

    @FXML
    void createNewOrderButtonClick(ActionEvent event) throws IOException {
        enterNumberText.setVisible(true);
    }

    @FXML
    void deluxeButtonClick(ActionEvent event) {
        pizzaType = "D";
    }

    @FXML
    void enterNumberButtonClick(ActionEvent event) {
        if (numberChecker()) {
            numberEnter.setPromptText("xxxxxxxxxx");
            numberEnter.clear();
            enterNumberText.setVisible(false);
            workingText.setVisible(true);
            //create new order w that number
        }
    }

    @FXML
    void hawaiianButtonClick(ActionEvent event) throws IOException {
        pizzaType = "H";
    }

    public String getPizzaType() {
        return pizzaType;
    }

    @FXML
    void manageStoreOrdersClick(ActionEvent event) throws IOException {
        Parent root = FXMLLoader.load(getClass().getResource("StoreOrdersView.fxml"));
        stage.setTitle("Store Orders");
        stage.setScene(new Scene(root, 500, 500));
        stage.show();
    }

    @FXML
    void pepperoniButtonClick(ActionEvent event) throws IOException {
        pizzaType = "P";
        Parent root = FXMLLoader.load(getClass().getResource("StoreOrdersView.fxml"));
        stage.setTitle("Store Orders");
        stage.setScene(new Scene(root, 500, 500));
        stage.show();
    }


    @Override
    public void initialize(URL location, ResourceBundle resources) {
    }

}
